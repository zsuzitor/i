#needwrite -- надо записать в тетрадь



need read
персисдентный класс 401-- page 320+
построитель классов
функциональные методы abap exp\imp\return
записать поля sy- и за что отвечают
что именно должно начинаться с Z



TODO







????
SELECTION-SCREEN BEGIN OF BLOCK bl1 WITH FRAME.
     SELECT-OPTIONS: s_carrid FOR gs_selscr-carrid NO INTERVALS.
SELECTION-SCREEN END OF BLOCK bl1.


types tt_scarr                          TYPE STANDARD TABLE OF struct_name.


CHECK me->mt_data IS NOT INITIAL.


LOOP AT me->mt_data ASSIGNING <fs_data>.
 READ TABLE me->mt_scarr into ...


IF mo_object IS NOT BOUND.


call func.
EXPORTING tables  var1=var2.

ls_val-find_text  = |[{ <fs_comp>-name }]|.

















вроде как поиск первого вхождения
FIND  FIRST OCCURRENCE OF
FIND  FIRST OCCURRENCE OF ls_placeholders-ph IN mv_action_next.
 REPLACE ALL OCCURRENCES OF ls_placeholders-ph IN mv_action_next WITH ls_placeholders-value.




 TRANSLATE ls_dynp_values-fieldname TO UPPER CASE.




UPDATE zsm_it_fa
                       SET it_check = space
                       WHERE fa = lv_fa.


IF go_application->mo_hfa->mo_rating_empl IS NOT BOUND.




SORT lt_outtab BY uname buss_element pernr.



DELETE ADJACENT DUPLICATES FROM lt_outtab COMPARING pernr buss_element.




CALL FUNCTION 'READ_TEXT'
        EXPORTING
          id       = 'ST'
          language = sy-langu
          name     = 'ZSM_RAT_HFA_EMPL_CONT'
          object   = 'TEXT'
        TABLES
          lines    = lt_text.






READ TABLE lcl_singleton=>connection_list
INTO ex_connection
WITH TABLE KEY carrid = im_carrid
connid = im_connid





{
METHOD get_connection.
READ TABLE lcl_singleton=>connection_list
INTO ex_connection
WITH TABLE KEY carrid = im_carrid
connid = im_connid.
ENDMETHOD.


METHODS: get_connection IMPORTING im_carrid TYPE s_carr_id
im_connid TYPE s_conn_id
EXPORTING ex_connection TYPE spfli.






import export
r_agency->get_connection( EXPORTING im_carrid = ’LH’
im_connid = ’0400’
IMPORTING ex_connection = wa ).
}




что делает
ASSIGN ref_itab->* TO <fs_itab>





SELECT *
      FROM zhr_plan_holiday
      WHERE begda EQ @lv_date
      INTO TABLE @DATA(lt_plan_holiday).






 CHECK 1 = 1. 






CLASS:
      lcl_application         DEFINITION DEFERRED





IF str NP '*@*'.
 if gv_full_email cp '*<*@*>*' and gv_full_email np '*"*<*@*>*"*'.






mt_r_project       TYPE RANGE OF   project_id



-------------------------------------------------------------------------------------------------------------------------

навести на слово в редакторе +  F1 будет подсказка по слову
f4 возможные значения


#tranz
#транзакции
ABAPDOCU --- коллекция программ-примеров
SE80  --- все все все    ,  Навигатор по объектам
SE16 -- браузер данных
ABAP-редактор (транзакция SE38) для написания ABAP-программ
SE11\se12   ABAP-словарь  для определения и описания таблиц,элементов данных, объектов блокирования и т.д., узнать где что используется
Редактор экранов (транзакция SE51, в подменю Интерфейс пользователя), для создания интерактивных интерфейсов пользователя
Построитель функций (транзакция SE37) для создания и управления функциональными модулями (они представляют собой инкапсулированные разделы текста ABAP-программы с определенным интерфейсом ввода/вывода)
SE38 Расширенная синтаксическая проверка программ
se37   Построитель функций
se24   Построитель классов
se51   Редактор экранов
se41   Редактор меню
se09   Организатор переносов
se01   просмотр запросов
so10   просмотр стандартных текстов стандартный текст standart text
zsm_hsu    -менять руководителя структурного подразделения сп
zsm_hfa    - менять рфн
so10       -стандартные текста
code_scanner   - поиск вхождения строки по всем классам, программам
swia          - обработка потока операций в качестве одмина
sost         -  просмотр рассылок, трасировка и тд
ZSM_TASK_CREATE   создание задачи   справа выбрать проект и для него далее
Z_WF_REQUEST     -  создание заявок (создать проект и тд)
pfac             -  добавление ролей

pa40 -> заполнить для -завести себя в систему
pa20  просмотр данных   -людей в системе
pa30  редактирование данных - людей в системе








создать проект
добавление себе ролей    --  * + ДПК
Z_WF_REQUEST  --- создать проект
одобрить в почте в входящих у дпк

просмотреть проект ->меню дпк проектная деятельность->проект -> просмотр



добавление( добавить ) себе ролей       #add   #role
pfac - транзакция
выбрать роль
изменить
ответственности
добавить присвоен обработчика->пользователь->выбрать себя->сохранить














создание и просмотр реализации фактической  #рф
zsm_bid_pa
1 дата самая маленькая
остальные одинаковые и максимально большие(но меньше чем в проекте)
надо не просто сохранить а сохранить и отправить на утверждение


утверждение объектов
открыть меню конкретной роли
другое меню-> z_de1_ccgo -> утверждение проектов ДПК












автоотступы
включить в настройках
В самом ABAP-редакторе:
Утилиты->Параметры настройки->ABAP-редакт.->Структ.печать->Отступ
выделить текст
кнопка сверху->структурная печать




#добавление стандартного текста в запрос #standart text
se01->код запроса
(в запросе нажать на "Запрос\задача"(сверху) т там "изменить тип") сделать запрос тип ->разработка\корректура

для переноса в запрос текстовой таблицы
se38 ->RSTXTRAN запустить->
имя корректуры то что выше получили с запроса
ключ текста-объект- TEXT
ключ текста-имя    - имя стандартного текста
-> выполнить, нажать "дальше"- кнопка запуска транзакций возле строки их выполнения
-> перенести в корректуру

#standart text
если считваение стандартного текста то функция read_text,  name-имя стандартного текста
есть текста изначально заданные, типо константы
lv_txt = TEXT-026.









#abr  #abbr
#абревиатуры




HR	Сотрудник кадровой службы
IT	Сотрудник IT отдела
МП	Менеджер проекта
АП	Администратор проекта
АрП	Архитектор проекта
АсП	Ассистент администратора проекта
БУХ	Бухгалтер
ГД	Генеральный директор
КД	Коммерческий (финансовый) директор
ДпК	Директор по консалтингу
ОЗО	Ответственный за оценку
ОЗП	Ответственный за планирование
ОМ	Офис-менеджер
РП	Руководитель проекта
РФГ	Руководитель функциональной группы
РФН	Руководитель функционального направления
С	Сотрудник
СК	Сотрудник компании
СКС	Специалист кадровой службы
ЮР	Сотрудник юридического отдела



Английские сокращения функциональных ролей

Сокращение термина	Расшифровка термина	Полное название
AC		Бухгалтерский отдел
AP		Ассистент
ARP		Архитектор проекта
BUH		Бухгалтерия
CEO	Chief Executive Officer	Генеральный директор
CFO	Chief Financial Officer	Коммерческий (финансовый) директор
CIO	Chief Information Officer	Технический директор
EPM		Руководитель проекта
EMPL	Employee	Сотрудник
GD		Генеральный директор
HFA		Руководитель функционального направления
HFG		Руководитель функциональной группы
HR	Human Resource	HR-отдел
HSU		Руководитель структурного подразделения
INIT	Initiator	Инициатор
IT	Information Technology	IT-отдел
LAW		Юристы
LD		Юридический отдел
MEMB	Member	Участник
MP		Менеджер проекта
OM		Офис менеджеры
OO		Ответственный обработчик
OO2		Ответственный обработчик 2-я линия
PM		Администратор проекта
PRO		Проектный офис
RFA		Ответственный за согласование
RFE		Ответственный за оценку
RFP		Ответственный за планирование
ROD		Руководитель структурного подразделения
RUK		Руководители
SE		Экономист
SOGL		Согласующие




Сокращения объектов системы


Сокращение термина	Полное название
CATS	Табель учета рабочего времени
SD	Service Desk
ГРВ	График рабочего времени
ЗЗ	Запросы закрытия
ЗИ	Запросы изменений
ЗНП	Заявка на планирование (устаревший термин, заменено на ЗНПФ)
ЗНПФ	Заявка на планирование фактич.
И	Рассылка информационная
КАС	Контроль активности сотрудников
КЗИ	Комплексный запрос изменения
КЗНП	Комплексная заявка на планирование (устаревший термин, заменено на КЗНПФ)
КЗНПФ	Комплексная заявка на планирование фактич.
П	Рассылка персонифицированная
ПП	Персональное поручение
РПрс	Раздел персонала
РФ	Реализация фактическая
СД	ServiceDesk
ТШ	Тайм-шит
УО	Управленческий отчет
УРСПФСФР	Унаследованная от руководителя структурного подразделения фиксация событий функциональной роли
УРФГФСФР	Унаследованная от руководителя функциональной группы фиксация событий функциональной роли
УРФНФСФР	Унаследованная от руководителя функционального направления фиксация событий функциональной роли
ФСС	Фиксация событий сотрудника
ФСФР	Фиксация событий функциональной роли




Иные сокращения



Сокращение термина	Полное название
FN	Консалтинг за счет компании без премии
FT	Консалтинг за счет клиента
FV	Консалтинг за счет компании с премией
ID	Идентификатор
IT	Информационные технологии
KPI	Ключевые показатели эффективности
SLA	Соглашение об уровне предоставления услуги
UML	Унифицированный язык моделирования
VPN	Виртуальная частная сеть
WF	WorkFlow - рабочий процесс
БЕ	Балансовая единица
ВЗ	Вовремя закрытые
ВЗО	Вовремя закрытые объекты
ВЗИ	Вовремя закрытые инциденты
ВРЗ	Вовремя завершенные работы
ДЗ	Дата завершения
ДН	Дата начала
ДО	Дата оценки
ДОЗ	Дата оценки "Закрыто"
ДОРЗ	Дата оценки "Работы завершены"
ДС	Дата создания
ДР	День рождения
ДФ	Дата фактическая
ЕР	Единица расчета
ЕИ	Единица измерения
ЕИВ	Единица времени/измерения
ЗАП	Затраты администратора проекта
ЗФН	Затраты руководителя функционального направления
ИД	Идентификатор
ИТ	Информационный тип
МВЗ	Место возникновения затрат
МВП	Место возникновения прибыли
НВЗ	Не вовремя закрытые
НВРЗ	Не вовремя завершенные работы
НДАП	Нераспределенные услуги администратора проекта
НДС	Налог на добавленную стоимость
НДФН	Нераспределенные услуги руководителя функционального направления
НЗИ	Не вовремя закрытые инциденты
НРБП	Накопление резерва будущих периодов
ПО	Поток операций
ПО	Программное обеспечение
ПФ	Премиальный фонд
РЗ	Работы завершены
СБ	Служба безопасности
СП	Структурное подразделение
С/с	Себестоимость
СФ	Светофор
ТМЦ	Товаро-материальные ценности
ТН	Табельный номер
ТО	Трудоемкость по оценке
ТП	Трудоемкость по плану
ТФ	Трудоемкость по факту
УАП	Услуги администратора проекта
УЗ ЕР	Управляющая запись единицы расчёта
УУ	Управленческий учет
УФН	Услуги руководителя функционального направления
ФГ	Функциональная группа
ФИО	Фамилия, имя, отчество
ФН	Функциональное направление
ФР	Функциональная роль





















#workflow #потоки




#tranz
SWETYPV        Для связи инициирующего события с потоком операций
SWO1         Посмотреть список доступных бизнес-объектов и создание + создание подтипов
SWO1         создание бизнесс объекта
SWIA        Просмотр потоков операций (журнал потоков операций)
SWDD           открыть поток операций

pftc     -TODO просмотреть какое событие вызвало поток, построитель и все остальное

PHAP_CREATE   создание дкоуамента оценки

swpc   продолжить выполнение потока после системного сбоя
st22   просмотр ошибок во время выполнения потока
swud    тоже работа с ошибками
swu_obuf    чистка буфера
swus_with_reference    создает копию потока    но нужно выполснить логическое удаление старого потока


swdd    - построитель ПО
swia    - журнал по
pfac    - поиск правил, просмотр правил




логическое удаление старого потока

swia журнал\администрирование



-------+++++++++++++--------------



после доабвления инициирующего события к потоку , эту строку слева надо активировать


-------------создание события для нового бизнесс объекта--------------
1.Создание нового бизнес-объекта
Супертип-> наименование стандартного бизнес-объекта, на основании которого в новый бизнес-объект будут скопированы существующие события, методы, атрибуты



2.Настройка делегирования
SWO1, выберите в меню Параметры настройки -> Делегирование, и создайте новую запись   -> тип объекта == тот от которого наследовали, тип делегирования == текущий объект


3. Создание нового события
открыть объект ->событие->создать(белый лист сверху)

4. Изменение статуса созданного события и бизнес-объекта
выбрать новое событие и сверху нажать - обработать->Изменить статус деблокирования -> Компонент типа объекта -> Во внедрении
Затем установите курсор на тип объекта и выберите    - обработать->Изменить статус деблокирования -> Тип объекта -> Во внедрении



добавление созданного события бизнесс объекта для категории\группы категории
ля этого необходимо открыть транзакцию OOHAP_CATEGORY, выбрать узел Поток операций — события для той Группы категорий и категории, в которых создан формуляр, и создать новую запись с наименованием созданного события
После добавления записи для соответствующей группы категорий, необходимо зайти в транзакцию PHAP_CATALOG, выбрать группу категорий, в которой создан формуляр, и убедиться, что новое событие добавлено (для проверки следует открыть закладку Смена статуса -> Событие):

***********************пропущены куски***************************



!!!!
Привязка события бизнес-объекта потоку операций


TODO С помощью транзакции SWETYPV сделайте привязку события с потоком операций, который необходимо запустить:




















#abap




все файлы должны начинаться с Z


комментарии
* -с начала строки
" -не с начала строки


объединение операторов

write: val1,
val2.
тоже самое что и 
write val1.
write val2.


системное поле, если равно 0 то операция пвыполнена успешно
sy-subrc








типы
date
time
integer
floating
string
xstring
c-character
n-numerical character
x
p-packed numver
'123,45'  '123,45E01'
//ограничиваем значение после запятой
data var1 type p decimals 2. 


+ - * . 
** - возведение в степень
DIV - деление на цел без остатка
MOD -деление на цел с остатком


#string

text2      TYPE c LENGTH 30.
text2      TYPE string.
text2(30)      TYPE c.


#CONCATENATE #SEPARATED
CONCATENATE str1 str2 str3 INTO str4 SEPARATED BY ','.

конкатенация  ' ' && '1'.


очистить строку 
clear str.

#SPLIT list AT ',' INTO name1  name2 name3  name4 name5.
SPLIT list AT ',' INTO TABLE table_name.

#shift   сдвигаем строку удаляя то что за границы выходит (не уверен)
SHIFT <значение> LEFT DELETING LEADING space.

#replace заменяет первое вхождение
REPLACE '' WITH '' INTO list. 
"заменит первое вхождение строки substring на строку new в  строке text1.
REPLACE substring WITH new INTO text1.
 
#TRANSLATE  заменяет все вхождения
TRANSLATE  list USING  ''.

#SEARCH
если sy-subrc  не 0 то не найдено
Системное поле sy-fdpos содержит сдвиг найденной строки относительно начала.
SEARCH list FOR ''.

"длина строки
var1=strlen(str).






"разница инкремента с пробелами и без пробелов
ariable = '4711', variable + 1 оценивается 4712
variable+1 как '711'


#sy-


#SY-DATUM   Актуальная дата сервера приложений
#SY-UZEIT     Актуальное время сервера приложений
#SY-INDEX     Счетчик цикла DO
#SY-TABIX     Индекс строки таблицы в цикле LOOP
#SY-SUBRC     Код возврата, содержит результат последней выполненной операции. SY-SUBRC = 0 в случае успешного выполнения.
#SY-LANGU     Язык входа в систему
#SY-BATCH     Программа выполняется в фоновом режиме
#SY-BINPT     Программа выполняется в рамках пакетного ввода
#SY-REPID     Имя текущей программы
#SY-UNAME     Имя пользователя





#types

types type_name type c.
data var1 type type_name.



#инкремент #increment
var1 = var1 +1;
ADD 1 to var1;


#условия

if NOT ((var1>10 AND var2=10) OR var3<12).
...
elseif var4=20.
...
else.
endif.


case var
when 'AA'.
when 'fF'.
when others.
endcase.




#write
write tmp color col_key.       "выделение поля цветом
write tmp  COLOR COL_NORMAL.
write: / ..,.. .     "будет после этого блока переводить строку

WRITE: AT (2) 'ID'. " указываем длину строки в скобках

skip-???? todo
sy-vline   - вертикальная линия
sy-uline   - горизонтальная линия
new-line.  вывод пустой строки(перевод строки)






clear tmp.-очищаем переменную


#message
message 'text' type 'I'. "выведет сообщение(информационного типа) с текстом
message e045(bc400) with 'mes'.        "return; + выводит сообщение
MESSAGE s176(bc400).
MESSAGE s047(bc400)





режим отладки
в программе /h в поле для ввода транзакций



#циклы #do #while
sy-index- номер текущего прогона цикла(того в котором обращаемся)

do.
exit.
enddo.

do n times.
...
enddo.


while var<10.
endwhile.






 #таблицы #table
"тут не уверен что создается и для чего
//локальный тип данных
//если types заменить на data то будет внутренняя локальная таблица
types tt_type 
type standard table of table_name
with non-unique KEY column1 column2 column3 .







#table #таблица #внешняя
работа с внешней таблицей
"больше информации по выборке по тегу select

определяем переменную для таблицы(строка таблицы)
data var1 type table_name.


циклы для бд + выборка

select * from table_name_db into var1.//var1- переменная, строка таблицы
..
endselect.



#join

select * from table_name1 inner join table_name2
on table_name1~column1 = table_name2~column2
where ... .





#add #data #table 
засунуть данные в таблицу
se37 ->SE16N_INTERFACE -> выполнить->{
i_tab = название таблицы
i_edit = X   "просто поставить  "X"
i_max_lines = 0   "отрисоваться всю как в sost








#внутренняя #table #таблица #local
работа с внутренней таблицей


определение переменной внутренней таблицы для работы 
по названию прозрачной таблицы:
data var1 type table of table_name.
по типу прозрачной таблицы
data var1 type table_type.

"создание таблицы классов
data tabl1 type table of ref to class_name.


"заносим данные из прозрачной таблицы в внутреннюю
select * from table_name into table var1. //var1- название переменной внутренней таблицы

"вставляем данные в таблицу
INSERT line INTO TABLE itab.
APPEND line TO TABLE itab.

определяем переменную для таблицы(строка таблицы)
data var1 like line of название_переменной_внутренней_таблицы.


loop at <внутр таблица> [into переменная_внутренней_таблицы].
..
endloop.















флаги доступа к таблицам
//при запросе вернулась хотя бы 1 строка
sy-subrc=0
если sy-subrc=0 то sy-dbcnt содержит количество считанных значений.




















копирование
//приведение типов и при неудаче исключение
move var1 to var2.
тоже самое что
var2=var1.

//копирует только те поля которые соответствуют по названиям, не соответсвующие поля не изменяет
move-corresponding var1 to var2.
"в sql
FROM sflight INTO CORRESPONDING FIELDS OF wa_sbook

перенос данных из select в структуру а не в переменную(строку) таблицы
select * from ... into correspouding fields of struct_name.




объявления типов





объявляем #структуру
#struct

types: begin of struct_name,
var1 type string,
...,
end of struct_name.

struct_name-var1.




объявление переменных

data var_name type string value ''.
//объяление переменной типа поля структуры
data var_name type struct_name-struct_prop.

#const
constants var_name type type_name.




#bd #db #select
"больше информации по таблицам по тегу table
//объявляем переменную для строки таблицы
data var1 type table_name_db.

//перебор таблицы и на каждой итерации присвоение строки 
select * from table_name_db into var1.
//делаем что либо с текущей строкой 
write var1-column_name.
endselect.

"записываем в таблицу
select * from table_name into corresponding fields of table var_table1.


seelct * from table_name into corresponding fields of table var_table2
for all entries in var_table1 where id = var_table2-id.






#needwrite
#parameters

//создать поле для ввода переменной с значением по умолчанию
parameters var_name type type_name default 'lh'.
parameters var_name like переменная.          "создается поле для ввода типа переменной
parameters var_name type i MATCHCODE OBJECT search_func_name.  "вешаем пользовательский поиск на параметр #search #поиск



//для настроек, можно изменить название на экране
selection-screen begin of block bl1 with frame title text-001.
selection-screen end of block bl1.

критерий выбора
для отображение 2х полей параметров которые будут рассматриваться как начало и конец диапазона
//page 263 book-400
//data_object--- колонна внутренней таблицы например
//name1--- название внутренней таблицы с диапазоном значений которая будет создана  Эта таблица всегда состоит из
//четырех столбцов: sign , option , low и high
select-options name1 for data_object   default ''.
//указываем стандартный диапазон 
//NO-EXTENSION -- запрещает многократный выбор
//sy-datum  - текущая дата
SELECT-OPTIONS fldate_p FOR tmp-fldate DEFAULT sy-datum TO sy-datum NO-EXTENSION .

//применение в sql например
... where col_name in name1
IF wa_spfli-carrid IN so_car.










создание транзакции для программы
зайти в папку программы->создать транзакцию->указать название программы

































Чтобы в системе могли выполняться запросы на блокировку, в ABAP-словаре
необходимо определить объект блокирования. Объект блокирования
содержит таблицы, записи которых должны быть блокированы. Для объекта
блокирования определяется режим блокирования. Выделяются два вида
блокировок: монопольные и совместные


Для удаления блокировок, удерживаемых пользователями, имеется два
основных способа:
1 Завершение пользовательского сеанса в обзоре пользователей
(транзакция SM04, или Инструменты - Администрирование -
Монитор - Контроль системы - Обзор пользователей)
2 Удалив вручную записи блокирования в транзакции SM12



























#todo








F1 (справка по вводу) можно вызвать документацию по полям
(документацию элемента данных).
С помощью функциональной клавиши F4 (справка по вводу)
вызывается средство поиска элемента данных, предназначенное для
просмотра допустимых значений ввода


Присвоение значения по умолчанию внедряется не дополнением
VALUE, а дополнением DEFAULT.










{
" оба надо писать в событие  START-OF-SELECTION.
set pf-status 'TEXT'        "TEXT- обязательно капсом   ,  устанавливаем пф статус     ,для добавления своих кнопок на панель
2 click on TEXT        "создаем диалог
" событие в котором заполняется поле sy-ucomm  ---  at user-command    , его юзать не надо все делается само

set titlebar 'TEXT'  "создает title для экрана, но нужно настроить через 2 click on TEXT


}



#списки

 sy-lsind .
В данном поле отображается текущий уровень списка


При выборе основного списка путем двойного щелчка или нажатия
функциональной клавиши F2 инициируется ABAP-событие AT
LINE-SELECTION









#event #события


initialization.   "динамические значения для экраа выбора

start-of-selection. "до появления экрана



hide: a-col,.. .     "для переноса этих значений в событие выделения строки (at line-selection.)


at line-selection.   "событие вызываемое при нажатии строки в списке
в событии доступны поля которые были определены для строки как hide
WRITE: / wa_sbook-carrid,        "просто выводим
hide:
wa_sbook-carrid ,          "скрыто выводим для получения доступа в событии

sy-lsind "текущая выбранная линиия в списке,значение больше на 1 чем sy-listi            "TODO 




вызываем экран ,в нем будут доступны переменные из кода
CALL SCREEN 100.

#MODULE  #PROCESS #OUTPUT #INPUT
"объявляем модуль для экрана который будет выполняться при старте экрана на которые повесим это событие
MODULE module_start OUTPUT.
  CLEAR sy-ucomm.
   ENDMODULE.

"объявляем модуль для экрана который будет выполняться при при нажатии кнопки на экране на который повесим это событие
MODULE module_click_button INPUT.
CASE sy-ucomm.
   WHEN 'BACK'.  "значение кнопки
     SET SCREEN 0.
ENDCASE.
ENDMODULE.






проверка доступа
CONSTANTS: actvt_display TYPE activ_auth VALUE '03',  "просмотр
 actvt_change TYPE activ_auth VALUE '02'.             "редактирование

"S_CARRID- объект для которого проверяем доступ
"CARRID - поле которое будем сравнивать(для поиска объекта)
"ACTVT   поле которое указывает на уровень доступа(просмотр\редактирование)
AUTHORITY-CHECK OBJECT 'S_CARRID'
ID 'CARRID' FIELD wa_sbook-carrid
ID 'ACTVT' FIELD actvt_display.
IF sy-subrc = 0.   " доступ разрешен


#функции #функция #function

"функциональный модуль
function name
"exporting
var1 = ''.
endfunction.

data var2 ... .
call function 'NAME' "капсом
importing var1=var2. "именно в таком порядке надо указывать, вернет значения



#form
определение 
form name_func
using
value(f1) [type i]    "передача по значению
changing 
value (f2)            "передача по значению и возврат результата
f3                    "передача по ссылке
endform.

вызов
perform name_func
using a changing b c.
если надо передавать строку таблицы то в f переменную надо типизировать
если 1 название то получитм доступ к локальному

PERFORM FORM IN PROGRAM PROG [IF FOUND]. "вызов из другой программы






sort внутр_табл by col.     "сортирует внутренную таблицу по полю.


"объявление своей функции
function name_of_function
endfunction.



вызов функции для открытия диалога(#confirm->js)

params

Обязательные параметры импорта: TEXT_QUESTION(макс. 80знаков): вопросв диалоговом окне. 

Необязательные параметры импорта: TITLEBAR(макс. 40знаков): заголовокдиалоговогоокна. 
DIAGNOSE_OBJECT(SE61, тип DT): дополнительный диагностический текст, выводимый над текстом вопроса в диалоговом окне. 
TEXT_BUTTON_1(макс.8знаков): текстнапервойкнопке. 
ICON_BUTTON_1 (макс. 30знаков): имяпиктограммы на первой кнопке (таблица ICON). 
TEXT_BUTTON_2(макс.8знаков): текстнавторойкнопке. 
ICON_BUTTON_2 (макс. 30знаков): имяпиктограммы на второй кнопке (таблицаICON). 
DEFAULT_BUTTON ("1", "2" или "A"): кнопка с присвоением по умолчанию. 
DISPLAY_CANCEL_BUTTON ("X". " ): отображение кнопки Отменить. 
USERDEFINED_F1_HELP (SE61, тип DT): пользовательский текст справки, выводимый на экран при нажатии дополнительной кнопки.
START_COLUMN (тип SY-CUCOL): начальный столбец диалогового окна.
 START_ROW (тип SY-CUROW): начальная строка диалогового окна. 
POPUP_TYPE(типICON-NAME):пиктограмма,выводимая рядом с текстом вопроса в диалоговом окне. 
IV_QUICKINFO_BUTTON_1 (макс. 132знака): всплывающаяподсказка дляпервойкнопки. 
IV_QUICKINFO_BUTTON_2 (макс. 132знака): всплывающая подсказка для второйкнопки. 

Параметр экспорта(всегдаявляется необязательным): 
ANSWER (значение: "1", "2", "A"):ответ, выбранный пользователем. 
Необязательные табличные параметры: 
PARAMETER (тип строки SPAR): таблица переноса для параметров в текстах диагнозов и вопросов. 
Особые ситуации: TEXT_NOT_FOUND:диагностический текст ненайден. 






В блокеE XPORTING производится передача значений в параметры импорта функционального модуля

Вблоке IMPORTING вызова производится присвоение параметрам экспорта приемных переменных, 
посредством которых осуществляется получение результатов вызова. 



data answ type string.        "значение которое будет возращено
              CALL FUNCTION 'POPUP_TO_CONFIRM'        "название f
              EXPORTING titlebar = 'text_titl'
                text_question = 'text_ques'
                display_cancel_button = space
                IMPORTING answer = answ.

answ =:
1   " нажата кнопка ДА
               CASE answ.
2   " "нажата кнопка НЕТ
       
          




if NOT var1 is initial -следующее верно при наличии NOT проверка инициализации, если var1 имеет значение тогда true ?






#class

для получении подробной информации можно пойти в "построитель классов"

"создание переменной
DATA reference_name TYPE REF TO class_name.


"вызов метода
CALL METHOD reference_name->method_name. 
reference_name->method_name( ).


#class

#me->  "аналог this
#parrent->  "ссылаемся на родителя
"уровни доступа должны быть в таком порядке
PUBLIC SECTION, PROTECTED SECTION, PRIVATE SECTION
"наследование уровней доступа как в шарпе

class class_name definition.

types:.
constants:.

"объявление паблик секиции и переменной в ней
public section.
data: var1 type type1.

"объявление прайват секиции 
private section.

"#static переменная
class-data var1 type string.
"cl_name=>var1.

class-methods static_meth." в implementation будет описываться просто как method
"cl_name=>static_meth( ).

"объявление полей
data: var1 type type1,
var2 like var1111,
var3 type ref to type1.


METHODS meth_name
[
#IMPORTING         var1 TYPE type_name
#EXPORTING         var1 TYPE type_name
#CHANGING         var1 TYPE type_name
#RETURNING value(var1)         var1 TYPE type_name  "просто присваиваем значение переменной в функции и все, оно само возвращается
#EXCEPTIONS exceprion

].

"#constructor  максимум по 1 на класс и обязательно в паблик секцию
method constructor [importing exeptions raising].
"impl
"methid constructor. endmethod.

"static  class_constructor- не меняется, параметров нет
class-methods class_constructor.

endclass.


#private #constructor
"даже при таком определении конструктор надо в паблик секцию кидать
class cl definition create public.  "(protected ,private)
endclass.


#friends
"разрешает классу cl_name2 получить доступ к private секции класса cl
"это наследуется но не для класса в котором определяем friends, все наследники cl_name2 будут иметь доступ к cl 
class cl definition friends cl_name2. endclass.


#abstract
"статические методы не могут быть абстрактными
class cl_name definition abstract.
todo абстрактный метод
methods ... abstract ...
endclass.


#final
"класс нельзя наследовать
class cl_name definition final [inheriting from ... ].
endclass.

class cl definition.
"запрещаем переопределение, если уже есть у класса то в метода нельзя кидать
methods ... final...
endclass.






#create #class
"создание объекта, пустого ==null
data: var1 type ref to cl_name,
var2 like var1.
"добавляем в него данные #new
create object var1.
create object var1 exporting var_=100.

create object var1 EXCEPTIONS error_cntl_create = 1.
if sy-subrc<>0. "проверяем было ли вызвано исключение которое изменило флаг



"работают (при присвоении= и при move )также как в c# ссылочный тип
"var1 IS INITIAL  првоерка на null

"создание таблицы для класса
data itab type table of ref to class_name.
"добавление в таблицу
append var1 to itab.

"работа с таблицей класса
read table itab into var1
with key table_line->pub_attr3
"
loop at itab into var1
where table_line->pub_attr3.
endloop.



"вызов метода
var1->meth1( )."новый синтаксис, перед скобкой без пробела между скобками и после скобок должен быть пробел
call method var1->meth1( ). "старый синтаксис

var1->meth1(
exporting var=var_val ...
importing ...

).

"вызов static метода 
CALL METHOD classname=>method_name



#пример
"#объявление definition#
class cl_name definition.
public section.
methods meth_1 importing var1 type string var2 type string.

private section.
methods meth_2.
data: var11 type string, var12 type string.
endclass.


"объявление что бы 1 объявление работало #implementation

class cl_name implementation.
method meth_1.
....
endmethod.

method meth_2.
var11=var1.
endmethod.
endclass.




#наследование
при переопределении всегда позднее связываение

"Статические методы не могут быть переопределены.
"наследование уровней доступа как в шарпе

class cl_name definition inheriting from cl_name_parrent.
  
"переопределяем метод, сигнатура и уронь доступа должны оставаться
method meth_name redefinition.
endclass.

class cl_name implementation.
method meth_name.
"вызываем родительский метод
super->meth_name( ).
endmethod.
endclass.

Сигнатуру конструктора примпереопределении можно менять

присвоение родителя в ребенка как раз юзать вместо приведения типа #as #is #приведение #типов (например из интерфейса в класс)
MOVE ... ?TO ... "или ?=






#interface
все поля public
Соглашение об именах следующее: IF_ для
SAP-интерфейсов и ZIF_ или YIF_ для пользовательских интерфейсов


interface int_name1.
methods meth_name1.
endinterface.

interface int_name2.
interfaces int_name1.
methods meth_name2.
endinterface.
использование

class cl_name definition.
public section.
interfaces int_name2.
endclass.


class cl_name implementation.

method int_name1~meth_name1.
method int_name2~meth_name2.
endmethod.
endclass.

cl_obj->interface_name~int_meth( ).
"объект интерфейса
data var1 type ref to int_name.



"при ?= если нельзя то исключение CX_SY_MOVE_CAST_ERROR














#exeption #exception

Все классы особых ситуаций являются производными одного из классов
CX_NO_CHECK, CX_DYNAMIC_CHECK или CX_STATIC_CHECK,
которые сами являются производными общего суперкласса CX_ROOT.


Суперклассы CX_STATIC_CHECK: Подходящая особая ситуация должна
быть обработана или явно передана с помощью дополнения RAISING.
В противном случае при синтаксической проверке будет отображено
предупреждение. При определении собственных классов особых ситуаций
CX_STATIC_CHECK по умолчанию определяется как суперкласс.

Правило для подклассов CX_DYNAMIC_CHECK также применяется к
подклассам CX_DYNAMIC_CHECK: Необходимо обработать их или явно
передать с помощью дополнения RAISING. Разница заключается в том,
что здесь не выполняется статическая проверка. Если особая ситуация
не обрабатывается и не передается, синтаксическое предупреждение
не отображается. При инициации особой ситуации возникает ошибка
времени выполнения. Типичными примерами данной ситуации
являются предопределенные особые ситуации CX_SY_... для ошибок,
которые произойдут в среде во время выполнения. Обычно они являются
подклассами CX_DYNAMIC_CHECK.

Для подклассов CX_NO_CHECK правилом является то, что
соответствующие особые ситуации не могут быть явно переданы с
помощью дополнения RAISING. Эти особые ситуации могут быть
обработаны. В противном случае они автоматически передаются. Ни
синтаксическое предупреждение, ни ошибка времени выполнения не
вызываются непосредственно там, где она была инициирована. Вместо
этого, все особые ситуации, которые не обрабатываются в иерархии вызовов
переносятся до наивысшего уровня вызова. Если особая ситуация не
будет выявлена там, в этой точке возникнет ошибка времени выполнения.
Некоторые предопределенные особые ситуации с префиксом CX_SY_... для
ситуаций, связанных с ошибками в среде во время выполнения, являются
подклассами CX_NO_CHECK.






В стандартной системе SAP имена всех классов особых ситуаций начинаются с CX_.



"методы CX_ROOT
GET_SOURCE_POSITION     -    возвращает имя главной программы и (если связаны) имена включенных программ и номер строки исходного кода, в которой возникла особая ситуация
GET_TEXT     -    возвращает текст особой ситуации в форме строки.

"вызов исключения
raise exception type typ_ex [exportion attr1 = ...]


"создание своего класса исключений 401 --- page 340+


" "передача" объекта исключения в метод и получение обратно , тут вроде не все записал 401- page 347
methods meth importing ... exporting ... raising cx_excep.

data ref_excep type ref to  cx_excep.

try. ref->meth( exp... imp... ).
catch cx_excep into ref_excep. endtry.


raise exception type cx_ex_o exporting previous = l_ref_ex.
"и получаем объект через obj_ex->previous.




#try

try.
catch exep1 exep2 exep3.

cleanup.
"то что выполнится если не было catch для исключения
endtry.

"---------
data ref_exc type ref to cx_root.
try.
"что то выбрасывает исключение
"...
catch cx_root into ref_exc.
text = ref_exc->get_text( ).
endtry.




#event
"in definition
"static class-events
"объявляем событие in class1
events event_name [exporting value(var1) type type_name]

"устанавливаем(объявляем) обработчик для события in class2"...- имя класса(или интерфейса) в котором определено событие
methods on_event_name for event event_name of ... [importing var1 [sender]]


"in implementation

"вызываем событие  in class1
method meth_name.
raise event event_name [exporting var1=var2].


"регистрируем обработчик для события in class2 " надо засунуть в конструктор или место где должно событие вешаться

set handler on_event_name for all instances.











ALV Grid Control
"1
С помощью полноэкранного редактора экранов определите область
специального управляющего элемента на вашем экране.

"2
data r_container type ref to cl_gui_custom_container.
data r_grid type ref to cl_gui_alv_grid.
"CONTAINER_1 - специальный управляющий элемент на вашем экране
create object r_container exporting container_name = 'CONTAINER_1'.
create object r_grid exporting i_parent = r_container .
"itab_saplane - стандартная внутренняя таблица
r_grid->set_table_for_first_display( i_structure_name = 'SAPLANE' it_outtab = itab_saplane ).


"REFRESH_TABLE_DISPLAY - обновляет

"обработка событий

class cl_name definition.
public section.
"можно static
methods: on_double_click for event double_click of cl_gui_alv_grid importing es_row_no e_column.
endclass.

class cl_name implementation.
method on_double_click.
"строка и поле
message i100(bc401) with es_row_no-row_id e_column-fieldname









#BAdI 
TODO
401 page ~ 250





хз что это но оно записывает и считывает данные, page 412
"записываем
data r_handle type ref to zcl_shm_area.
data r_root type ref to zcl_shm_myrootobject.

r_handle = zcl_shm_area=>attach_for_write( ).
create object r_root area handle r_handle.
r_root->str = ''.
r_root->wa-carrid = ''.
r_handle->set_root( r_root ).
r_handle->detach_commit( ).

"считываем
data r_handle type ref to zcl_shm_area.
data r_root type ref to zcl_shm_myrootobject.

r_handle = zcl_shm_area=>attach_for_read( ).
write: r_handle->root->str, r_handle->root->wa-carrid.
loop at r_handle->root->itab into ... .

r_handle->detach( ).










#testing #test
TODO
"401-page 414
deminition for testing




#RTTS 
TODO
"динамическое создание типа  401 -- 384+++










#practic




#создание пакета и транспортного запроса

пакет->создать
3 строка (app comp) - AP
Software Component  - если не должно покидать эту систему пишем HOME
Transport Layer  - ZNSP
Package Type  not a main package
далее

ввести запрос в который надо засунуть
если его нет то создать
можно создать через SE10 или при создании пакета
нажать - белый листок(F8)






#создание домена

SE11
в разделе definition(2)
краткое описание
тип данных
no.characters -- длина
сохранить ->имя пакета
выбираем запрос
активировать




#создание элемента данных

se11
указать домен в разделе data type
в поле field label расшарить краткое описание
кнопка сверху documentation для создание документации - def- короткое описание use-длина тип и для чего нужно



#создание прозрачной таблицы

se11
краткое описание
в разделе delivery  :
delivery class -A,
Data Browser/Table View Maint  -Display/Maintenance Allowed
.
вкладка fields(поля):
MANDT - MANDT  ключ
ID    - data_type_id   ключ
имя и тип данных добавлять и если надо помечаем ключом
.
кнопка сверху technical settings:
data class - appl0
size category - 0
.
активировать


в se16 нажав на белый лист можно добавлять записи




#текстовая таблица 
название должно заканчиваться на "T"

TODO не уверен куда мандант кидать

создаем обычную таблицу с 2мя ключами мандант и id
создаем обычную таблицу с остальными полями и с доп полями
мандант , LANG - Langu ключ, и ключ для всязи с основной таблицей

для связи с основной таблицей надо выбрать поле для связи, 
нажать на ключ, там ввести основную таблицу и внизу задать параметр "key fields of a text table"
активировать



#создание ракурса

на странице редактирования таблицы сверху
utilities(M)-> table maintenance generator
authorization group-> &NC&
function group - указать куда будет все сохраняться
слева сверху кнопка -find scr. number(s) -> 1 стрка(propose screen number) -> OK
слева сверху белый лист
активировать





#создание средства поиска

se11
элементарное средство поиска
краткое описание
selection method - вводим имя таблицы
внизу выбрать поля по которым будет поиск 
в imp exp поиставить им галки
позиции пронумеровать 1-1, 2-2  и тд
активировать


для привязки к таблице
открыть редактор таблицы -> srch help добавляем
вкладка entry help/check  добавить поиск к полям если не добавились сами











"--------------------------------------------------------------------------------------------------------------

#teor


code->компилируется (генерируется)->исполняемый ABAP байт-код, известный как «report load». Исполняется на виртуальной машине.



шаблон для окончания писем
С уважением,
Имя Фамилия
Должность
MIGO GROUP
Пр. Ленина 86, офис 102
Волгоград , 400005, Россия
Офис: +7(8442) 23-56-65
Личный: +7(XXX)XXX-XX-XX
Skype: SkypeName
Email: EmailName@migogroup.ru
Web: www.migogroup.ru



















































































